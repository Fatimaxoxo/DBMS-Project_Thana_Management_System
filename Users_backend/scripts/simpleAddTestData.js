// scripts/simpleAddTestData.js
import { pool } from "../config/db.js";

async function simpleAddTestData() {
  try {
    console.log("üîÑ Simple test data add ‡¶ï‡¶∞‡¶õ‡¶ø...\n");

    // Manually add complaints with existing IDs
    const complaintsToAdd = [
      {
        complaint_id: 16,
        user_id: 4, // ‡¶∞‡¶π‡¶ø‡¶Æ ‡¶â‡¶¶‡ßç‡¶¶‡¶ø‡¶®
        crime_type: "‡¶Æ‡ßã‡¶¨‡¶æ‡¶á‡¶≤ ‡¶ö‡ßÅ‡¶∞‡¶ø",
        description:
          "‡¶¨‡¶æ‡¶∏ ‡¶∏‡ßç‡¶ü‡¶™‡ßá ‡¶¶‡¶æ‡¶Å‡¶°‡¶º‡¶ø‡¶Ø‡¶º‡ßá ‡¶•‡¶æ‡¶ï‡¶æ‡¶∞ ‡¶∏‡¶Æ‡¶Ø‡¶º ‡¶™‡¶ï‡ßá‡¶ü ‡¶•‡ßá‡¶ï‡ßá ‡¶Æ‡ßã‡¶¨‡¶æ‡¶á‡¶≤ ‡¶´‡ßã‡¶® ‡¶ö‡ßÅ‡¶∞‡¶ø ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡•§",
        location: "‡¶∂‡¶æ‡¶®‡ßç‡¶§‡¶ø‡¶®‡¶ó‡¶∞ ‡¶¨‡¶æ‡¶∏ ‡¶∏‡ßç‡¶ü‡¶™",
        incident_date: "2025-09-22",
        suspect_info: "‡¶™‡ßç‡¶∞‡¶æ‡¶Ø‡¶º ‡ß®‡ß´ ‡¶¨‡¶õ‡¶∞ ‡¶¨‡¶Ø‡¶º‡¶∏‡ßÄ ‡¶è‡¶ï‡¶ú‡¶® ‡¶Ø‡ßÅ‡¶¨‡¶ï, ‡¶®‡ßÄ‡¶≤ ‡¶∞‡¶ô‡ßá‡¶∞ ‡¶∂‡¶æ‡¶∞‡ßç‡¶ü ‡¶™‡¶∞‡¶æ ‡¶õ‡¶ø‡¶≤‡•§",
        thana_id: 1,
      },
      {
        complaint_id: 17,
        user_id: 5, // ‡¶∏‡¶æ‡¶≤‡¶Æ‡¶æ ‡¶Ü‡¶ï‡ßç‡¶§‡¶æ‡¶∞
        crime_type: "‡¶¨‡¶æ‡¶°‡¶º‡¶ø‡¶§‡ßá ‡¶ö‡ßÅ‡¶∞‡¶ø",
        description:
          "‡¶¨‡¶æ‡¶°‡¶º‡¶ø ‡¶•‡ßá‡¶ï‡ßá ‡¶¨‡ßá‡¶∞ ‡¶π‡¶ì‡¶Ø‡¶º‡¶æ‡¶∞ ‡¶∏‡¶Æ‡¶Ø‡¶º ‡¶¶‡¶∞‡¶ú‡¶æ ‡¶ñ‡ßã‡¶≤‡¶æ ‡¶∞‡ßá‡¶ñ‡ßá ‡¶ó‡ßá‡¶õ‡¶ø‡•§ ‡¶´‡¶ø‡¶∞‡ßá ‡¶è‡¶∏‡ßá ‡¶¶‡ßá‡¶ñ‡¶ø ‡¶ü‡¶æ‡¶ï‡¶æ ‡¶ì ‡¶ó‡¶π‡¶®‡¶æ ‡¶ö‡ßÅ‡¶∞‡¶ø ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡•§",
        location: "‡¶Æ‡¶ø‡¶∞‡¶™‡ßÅ‡¶∞ ‡ßß, ‡¶¨‡¶æ‡¶∏‡¶æ ‡¶®‡¶Ç ‡ß®‡ß´/‡¶è",
        incident_date: "2025-09-23",
        suspect_info: "‡¶™‡¶æ‡¶∂‡ßá‡¶∞ ‡¶¨‡¶æ‡¶°‡¶º‡¶ø‡¶∞ ‡¶ï‡¶æ‡¶ú‡ßá‡¶∞ ‡¶≤‡ßã‡¶ï ‡¶∏‡¶®‡ßç‡¶¶‡ßá‡¶π‡¶ú‡¶®‡¶ï ‡¶Ü‡¶ö‡¶∞‡¶£ ‡¶ï‡¶∞‡¶õ‡¶ø‡¶≤‡•§",
        thana_id: 1,
      },
      {
        complaint_id: 18,
        user_id: 10, // ‡¶∞‡¶æ‡¶∂‡¶ø‡¶¶‡¶æ ‡¶¨‡ßá‡¶ó‡¶Æ
        crime_type: "‡¶á‡¶≠‡¶ü‡¶ø‡¶ú‡¶ø‡¶Ç",
        description:
          "‡¶Ö‡¶´‡¶ø‡¶∏ ‡¶•‡ßá‡¶ï‡ßá ‡¶´‡ßá‡¶∞‡¶æ‡¶∞ ‡¶™‡¶•‡ßá ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶¶‡¶ø‡¶® ‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶Ø‡ßÅ‡¶¨‡¶ï ‡¶â‡¶§‡ßç‡¶Ø‡¶ï‡ßç‡¶§ ‡¶ï‡¶∞‡ßá‡•§ ‡¶Ö‡¶∂‡ßç‡¶≤‡ßÄ‡¶≤ ‡¶Æ‡¶®‡ßç‡¶§‡¶¨‡ßç‡¶Ø ‡¶ï‡¶∞‡ßá‡•§",
        location: "‡¶ó‡ßÅ‡¶≤‡¶∂‡¶æ‡¶® ‡ß® ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞ ‡¶∏‡¶°‡¶º‡¶ï",
        incident_date: "2025-09-21",
        suspect_info:
          "‡¶∏‡ßç‡¶•‡¶æ‡¶®‡ßÄ‡¶Ø‡¶º ‡ß©-‡ß™ ‡¶ú‡¶® ‡¶Ø‡ßÅ‡¶¨‡¶ï, ‡¶∏‡¶æ‡¶ß‡¶æ‡¶∞‡¶£‡¶§ ‡¶¨‡¶ø‡¶ï‡ßá‡¶≤‡ßá ‡¶ì‡¶á ‡¶è‡¶≤‡¶æ‡¶ï‡¶æ‡¶Ø‡¶º ‡¶¶‡ßá‡¶ñ‡¶æ ‡¶Ø‡¶æ‡¶Ø‡¶º‡•§",
        thana_id: 1,
      },
    ];

    const casesToAdd = [
      {
        case_id: 16,
        case_number: "CASE-2025-016",
        summary: "‡¶Æ‡ßã‡¶¨‡¶æ‡¶á‡¶≤ ‡¶ö‡ßÅ‡¶∞‡¶ø ‡¶∏‡¶Ç‡¶ï‡ßç‡¶∞‡¶æ‡¶®‡ßç‡¶§ ‡¶Æ‡¶æ‡¶Æ‡¶≤‡¶æ - ‡¶∂‡¶æ‡¶®‡ßç‡¶§‡¶ø‡¶®‡¶ó‡¶∞ ‡¶¨‡¶æ‡¶∏ ‡¶∏‡ßç‡¶ü‡¶™",
        complaint_id: 16,
        user_id: 4,
        thana_id: 1,
        priority: "medium",
        status: "pending",
      },
      {
        case_id: 17,
        case_number: "CASE-2025-017",
        summary: "‡¶¨‡¶æ‡¶°‡¶º‡¶ø‡¶§‡ßá ‡¶ö‡ßÅ‡¶∞‡¶ø ‡¶∏‡¶Ç‡¶ï‡ßç‡¶∞‡¶æ‡¶®‡ßç‡¶§ ‡¶Æ‡¶æ‡¶Æ‡¶≤‡¶æ - ‡¶Æ‡¶ø‡¶∞‡¶™‡ßÅ‡¶∞ ‡ßß",
        complaint_id: 17,
        user_id: 5,
        thana_id: 1,
        priority: "medium",
        status: "pending",
      },
      {
        case_id: 18,
        case_number: "CASE-2025-018",
        summary: "‡¶á‡¶≠‡¶ü‡¶ø‡¶ú‡¶ø‡¶Ç ‡¶∏‡¶Ç‡¶ï‡ßç‡¶∞‡¶æ‡¶®‡ßç‡¶§ ‡¶Æ‡¶æ‡¶Æ‡¶≤‡¶æ - ‡¶ó‡ßÅ‡¶≤‡¶∂‡¶æ‡¶® ‡ß®",
        complaint_id: 18,
        user_id: 10,
        thana_id: 1,
        priority: "high",
        status: "pending",
      },
    ];

    // Add complaints
    for (const complaint of complaintsToAdd) {
      try {
        await pool.query(
          `
          INSERT INTO Makes_complaint 
          (complaint_id, user_id, crime_type, description, location, incident_date, suspect_info, thana_id, status, date, created_at)
          VALUES (?, ?, ?, ?, ?, ?, ?, ?, 'pending', CURDATE(), NOW())
        `,
          [
            complaint.complaint_id,
            complaint.user_id,
            complaint.crime_type,
            complaint.description,
            complaint.location,
            complaint.incident_date,
            complaint.suspect_info,
            complaint.thana_id,
          ]
        );
        console.log(`‚úÖ Complaint added: ${complaint.crime_type}`);
      } catch (error) {
        console.log(
          `‚ö†Ô∏è Complaint ${complaint.complaint_id} might already exist`
        );
      }
    }

    // Add cases
    for (const case_ of casesToAdd) {
      try {
        await pool.query(
          `
          INSERT INTO Case_filing 
          (case_id, case_number, summary, start_date, complaint_id, user_id, thana_id, priority, status, progress_percentage, created_at)
          VALUES (?, ?, ?, CURDATE(), ?, ?, ?, ?, ?, 0, NOW())
        `,
          [
            case_.case_id,
            case_.case_number,
            case_.summary,
            case_.complaint_id,
            case_.user_id,
            case_.thana_id,
            case_.priority,
            case_.status,
          ]
        );
        console.log(`‚úÖ Case added: ${case_.case_number}`);
      } catch (error) {
        console.log(`‚ö†Ô∏è Case ${case_.case_id} might already exist`);
      }
    }

    // Add notifications
    const notifications = [
      {
        user_id: 21, // Thana officer
        title: "‡¶®‡¶§‡ßÅ‡¶® ‡¶Ö‡¶≠‡¶ø‡¶Ø‡ßã‡¶ó‡¶∏‡¶Æ‡ßÇ‡¶π",
        message: "‡ß©‡¶ü‡¶ø ‡¶®‡¶§‡ßÅ‡¶® ‡¶Ö‡¶≠‡¶ø‡¶Ø‡ßã‡¶ó ‡¶è‡¶∏‡ßá‡¶õ‡ßá ‡¶Ø‡¶æ ‡¶§‡¶¶‡¶®‡ßç‡¶§‡ßá‡¶∞ ‡¶Ö‡¶™‡ßá‡¶ï‡ßç‡¶∑‡¶æ‡¶Ø‡¶º ‡¶∞‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡•§",
        type: "complaint_received",
      },
      {
        user_id: 27, // Another Thana officer
        title: "‡¶®‡¶§‡ßÅ‡¶® ‡¶Ö‡¶≠‡¶ø‡¶Ø‡ßã‡¶ó‡¶∏‡¶Æ‡ßÇ‡¶π",
        message: "‡ß©‡¶ü‡¶ø ‡¶®‡¶§‡ßÅ‡¶® ‡¶Ö‡¶≠‡¶ø‡¶Ø‡ßã‡¶ó ‡¶è‡¶∏‡ßá‡¶õ‡ßá ‡¶Ø‡¶æ ‡¶§‡¶¶‡¶®‡ßç‡¶§‡ßá‡¶∞ ‡¶Ö‡¶™‡ßá‡¶ï‡ßç‡¶∑‡¶æ‡¶Ø‡¶º ‡¶∞‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡•§",
        type: "complaint_received",
      },
    ];

    for (const notif of notifications) {
      try {
        await pool.query(
          `
          INSERT INTO notifications 
          (user_id, title, message, type, created_at)
          VALUES (?, ?, ?, ?, NOW())
        `,
          [notif.user_id, notif.title, notif.message, notif.type]
        );
      } catch (error) {
        console.log(
          `‚ö†Ô∏è Notification for user ${notif.user_id} might already exist`
        );
      }
    }

    // Show final summary
    const [totalComplaints] = await pool.query(
      "SELECT COUNT(*) as count FROM Makes_complaint"
    );
    const [totalCases] = await pool.query(
      "SELECT COUNT(*) as count FROM Case_filing"
    );
    const [totalNotifications] = await pool.query(
      "SELECT COUNT(*) as count FROM notifications"
    );

    console.log(`\nüìä Database Summary:`);
    console.log(`üìù Total Complaints: ${totalComplaints[0].count}`);
    console.log(`üìÅ Total Cases: ${totalCases[0].count}`);
    console.log(`üîî Total Notifications: ${totalNotifications[0].count}`);

    console.log("\nüéâ Test data ‡¶∏‡¶´‡¶≤‡¶≠‡¶æ‡¶¨‡ßá ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá!");
  } catch (error) {
    console.error("‚ùå Error:", error);
  } finally {
    process.exit(0);
  }
}

simpleAddTestData();
