// scripts/addMoreComplaints.js
import { pool } from "../config/db.js";

async function addMoreComplaints() {
  try {
    console.log("Adding more complaints with proper user linkage...");

    // Get user IDs
    const [users] = await pool.query(`
      SELECT user_id, name, phone FROM users 
      WHERE user_type = 'user' AND phone IN ('01788888888', '01799999999')
    `);

    console.log("Found users:", users);

    if (users.length > 0) {
      const moreComplaints = [
        {
          id: 10,
          user_id: users[0].user_id,
          crime_type: "‡¶∏‡¶æ‡¶á‡¶¨‡¶æ‡¶∞ ‡¶Ö‡¶™‡¶∞‡¶æ‡¶ß",
          description:
            "‡¶Ö‡¶®‡¶≤‡¶æ‡¶á‡¶®‡ßá ‡¶≠‡ßÅ‡¶Ø‡¶º‡¶æ ‡¶™‡¶£‡ßç‡¶Ø ‡¶¨‡¶ø‡¶ï‡ßç‡¶∞‡¶ø‡¶∞ ‡¶´‡¶æ‡¶Å‡¶¶‡ßá ‡¶™‡¶°‡¶º‡ßá ‡ß´‡ß¶,‡ß¶‡ß¶‡ß¶ ‡¶ü‡¶æ‡¶ï‡¶æ ‡¶π‡¶æ‡¶∞‡¶ø‡¶Ø‡¶º‡ßá‡¶õ‡¶ø‡•§ ‡¶ü‡¶æ‡¶ï‡¶æ ‡¶´‡ßá‡¶∞‡¶§ ‡¶¶‡¶ø‡¶§‡ßá ‡¶Ö‡¶∏‡ßç‡¶¨‡ßÄ‡¶ï‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶õ‡ßá‡•§",
          location: "‡¶Ö‡¶®‡¶≤‡¶æ‡¶á‡¶® ‡¶™‡ßç‡¶∞‡¶§‡¶æ‡¶∞‡¶£‡¶æ",
          incident_date: "2025-09-23",
          status: "pending",
        },
        {
          id: 11,
          user_id: users[1]?.user_id || users[0].user_id,
          crime_type: "‡¶â‡¶§‡ßç‡¶Ø‡¶ï‡ßç‡¶§‡¶ï‡¶∞‡¶£",
          description:
            "‡¶Ö‡¶´‡¶ø‡¶∏‡ßá ‡¶Ø‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ‡¶∞ ‡¶™‡¶•‡ßá ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶¶‡¶ø‡¶® ‡¶â‡¶§‡ßç‡¶Ø‡¶ï‡ßç‡¶§ ‡¶ï‡¶∞‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá‡•§ ‡¶®‡¶ø‡¶∞‡¶æ‡¶™‡¶§‡ßç‡¶§‡¶æ‡¶∞ ‡¶Ö‡¶≠‡¶æ‡¶¨ ‡¶Ö‡¶®‡ßÅ‡¶≠‡¶¨ ‡¶ï‡¶∞‡¶õ‡¶ø‡•§",
          location: "‡¶Æ‡¶ø‡¶∞‡¶™‡ßÅ‡¶∞-‡ßß‡ß®, ‡¶¢‡¶æ‡¶ï‡¶æ",
          incident_date: "2025-09-22",
          status: "pending",
        },
        {
          id: 12,
          user_id: users[0].user_id,
          crime_type: "‡¶ú‡¶æ‡¶≤‡¶ø‡¶Ø‡¶º‡¶æ‡¶§‡¶ø",
          description:
            "‡¶¨‡ßç‡¶Ø‡¶æ‡¶Ç‡¶ï ‡¶è‡¶ï‡¶æ‡¶â‡¶®‡ßç‡¶ü ‡¶•‡ßá‡¶ï‡ßá ‡¶Ö‡¶ú‡¶æ‡¶®‡¶æ ‡¶¨‡ßç‡¶Ø‡¶ï‡ßç‡¶§‡¶ø ‡¶ü‡¶æ‡¶ï‡¶æ ‡¶§‡ßÅ‡¶≤‡ßá ‡¶®‡¶ø‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡•§ ‡¶ï‡¶æ‡¶∞‡ßç‡¶°‡ßá‡¶∞ ‡¶§‡¶•‡ßç‡¶Ø ‡¶ö‡ßÅ‡¶∞‡¶ø ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡•§",
          location: "‡¶è‡¶ü‡¶ø‡¶è‡¶Æ ‡¶¨‡ßÅ‡¶•, ‡¶ó‡ßÅ‡¶≤‡¶∂‡¶æ‡¶®",
          incident_date: "2025-09-21",
          status: "under_investigation",
        },
      ];

      for (const complaint of moreComplaints) {
        try {
          await pool.query(
            `
            INSERT INTO Makes_complaint (
              complaint_id, user_id, crime_type, description, location, 
              incident_date, status, date, created_at
            ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, NOW())
            ON DUPLICATE KEY UPDATE 
            crime_type = VALUES(crime_type),
            description = VALUES(description),
            location = VALUES(location),
            status = VALUES(status)
          `,
            [
              complaint.id,
              complaint.user_id,
              complaint.crime_type,
              complaint.description,
              complaint.location,
              complaint.incident_date,
              complaint.status,
              complaint.incident_date,
            ]
          );

          console.log(
            `‚úÖ Complaint ${complaint.id} added: ${complaint.crime_type}`
          );
        } catch (error) {
          console.log(`Error adding complaint ${complaint.id}:`, error.message);
        }
      }

      // Add corresponding cases
      const newCases = [
        { id: 10, complaint_id: 10, status: "pending" },
        { id: 11, complaint_id: 11, status: "pending" },
        { id: 12, complaint_id: 12, status: "in_progress" },
      ];

      for (const case_ of newCases) {
        try {
          await pool.query(
            `
            INSERT INTO Case_filing (case_id, complaint_id, status) 
            VALUES (?, ?, ?)
            ON DUPLICATE KEY UPDATE status = VALUES(status)
          `,
            [case_.id, case_.complaint_id, case_.status]
          );

          console.log(`‚úÖ Case ${case_.id} added`);
        } catch (error) {
          console.log(`Error adding case ${case_.id}:`, error.message);
        }
      }
    }

    // Show updated summary
    console.log("\nüìä ‡¶Ü‡¶™‡¶°‡ßá‡¶ü‡ßá‡¶° ‡¶°‡¶æ‡¶ü‡¶æ‡¶¨‡ßá‡¶∏ ‡¶∏‡¶æ‡¶∞‡¶æ‡¶Ç‡¶∂:");

    const [complaintCount] = await pool.query(
      "SELECT COUNT(*) as count FROM Makes_complaint"
    );
    console.log(`üìù ‡¶Æ‡ßã‡¶ü ‡¶Ö‡¶≠‡¶ø‡¶Ø‡ßã‡¶ó: ${complaintCount[0].count}`);

    const [caseCount] = await pool.query(
      "SELECT COUNT(*) as count FROM Case_filing"
    );
    console.log(`üìÅ ‡¶Æ‡ßã‡¶ü ‡¶Æ‡¶æ‡¶Æ‡¶≤‡¶æ: ${caseCount[0].count}`);

    // Show user-specific complaints
    console.log("\nüìã ‡¶á‡¶â‡¶ú‡¶æ‡¶∞ ‡¶Ö‡¶®‡ßÅ‡¶Ø‡¶æ‡¶Ø‡¶º‡ßÄ ‡¶Ö‡¶≠‡¶ø‡¶Ø‡ßã‡¶ó:");
    const [userComplaints] = await pool.query(`
      SELECT 
        u.name as complainant,
        u.phone,
        c.crime_type,
        c.status,
        c.created_at
      FROM Makes_complaint c 
      LEFT JOIN users u ON c.user_id = u.user_id 
      WHERE u.user_type = 'user'
      AND c.crime_type IS NOT NULL
      ORDER BY c.created_at DESC
      LIMIT 10
    `);
    console.table(userComplaints);

    console.log("\n‚úÖ ‡¶Ü‡¶∞‡ßã ‡¶ü‡ßá‡¶∏‡ßç‡¶ü ‡¶°‡¶æ‡¶ü‡¶æ ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá!");
    console.log("üåê ‡¶è‡¶ñ‡¶® ‡¶∏‡¶ø‡¶∏‡ßç‡¶ü‡ßá‡¶Æ‡ßá ‡¶≤‡¶ó‡¶á‡¶® ‡¶ï‡¶∞‡ßá ‡¶ü‡ßá‡¶∏‡ßç‡¶ü ‡¶ï‡¶∞‡ßÅ‡¶®");
  } catch (error) {
    console.error("‚ùå ‡¶Ö‡¶≠‡¶ø‡¶Ø‡ßã‡¶ó ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ:", error);
  } finally {
    process.exit(0);
  }
}

addMoreComplaints();
