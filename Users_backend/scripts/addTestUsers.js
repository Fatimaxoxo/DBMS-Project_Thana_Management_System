// scripts/addTestUsers.js
import { pool } from "../config/db.js";

async function addTestUsers() {
  try {
    console.log("Adding test users with correct roles...");

    const testUsers = [
      {
        name: "рж╕рж╛ржХрж┐ржм ржЖрж╣ржорзЗржж",
        phone: "01788888888",
        password: "123456",
        user_type: "user",
      },
      {
        name: "рж░рж╣рж┐ржорж╛ ржЦрж╛рждрзБржи",
        phone: "01799999999",
        password: "123456",
        user_type: "user",
      },
      {
        name: "ржирж╛рж╕рж┐рж░ рж╣рзЛрж╕рзЗржи (ржерж╛ржирж╛ ржЕржлрж┐рж╕рж╛рж░)",
        phone: "01711000001",
        password: "123456",
        user_type: "thana-officer",
      },
      {
        name: "рж╕рзЛрж╣рзЗрж▓ рж░рж╛ржирж╛ (ржУржпрж╝рж╛рж░рзЗржирзНржЯ ржЕржлрж┐рж╕рж╛рж░)",
        phone: "01711000002",
        password: "123456",
        user_type: "warrant-officer",
      },
    ];

    for (const user of testUsers) {
      try {
        await pool.query(
          `
          INSERT IGNORE INTO users (name, phone, password, user_type, thana_id) 
          VALUES (?, ?, ?, ?, 1)
        `,
          [user.name, user.phone, user.password, user.user_type]
        );

        console.log(
          `тЬЕ User added: ${user.name} (${user.phone}) - ${user.user_type}`
        );
      } catch (error) {
        console.log(`Error adding user ${user.name}:`, error.message);
      }
    }

    // Show all users with proper roles
    console.log("\nЁЯСе рж╕ржХрж▓ ржЗржЙржЬрж╛рж░ (ржнрзВржорж┐ржХрж╛ ржЕржирзБржпрж╛ржпрж╝рзА):");
    const [users] = await pool.query(`
      SELECT name, phone, user_type, thana_id 
      FROM users 
      WHERE user_type IN ('user', 'thana-officer', 'warrant-officer')
      ORDER BY user_type, name
    `);
    console.table(users);

    console.log("\nЁЯФС рж▓ржЧржЗржи ржПрж░ ржЬржирзНржп ржЯрзЗрж╕рзНржЯ ржЕрзНржпрж╛ржХрж╛ржЙржирзНржЯ:");
    console.log("тФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБ");
    console.log("ЁЯСд рж╕рж╛ржзрж╛рж░ржг ржЗржЙржЬрж╛рж░:");
    console.log("   ЁЯУ▒ 01788888888 | ЁЯФС 123456 (рж╕рж╛ржХрж┐ржм ржЖрж╣ржорзЗржж)");
    console.log("   ЁЯУ▒ 01799999999 | ЁЯФС 123456 (рж░рж╣рж┐ржорж╛ ржЦрж╛рждрзБржи)");
    console.log("\nЁЯСо ржерж╛ржирж╛ ржЕржлрж┐рж╕рж╛рж░:");
    console.log("   ЁЯУ▒ 01711000001 | ЁЯФС 123456 (ржирж╛рж╕рж┐рж░ рж╣рзЛрж╕рзЗржи)");
    console.log("\nЁЯФН ржУржпрж╝рж╛рж░рзЗржирзНржЯ ржЕржлрж┐рж╕рж╛рж░:");
    console.log("   ЁЯУ▒ 01711000002 | ЁЯФС 123456 (рж╕рзЛрж╣рзЗрж▓ рж░рж╛ржирж╛)");
  } catch (error) {
    console.error("тЭМ ржЯрзЗрж╕рзНржЯ ржЗржЙржЬрж╛рж░ ржпрзЛржЧ ржХрж░рждрзЗ рж╕ржорж╕рзНржпрж╛:", error);
  } finally {
    process.exit(0);
  }
}

addTestUsers();
