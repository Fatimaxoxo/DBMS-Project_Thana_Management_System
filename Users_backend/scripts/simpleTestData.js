// scripts/simpleTestData.js
import { pool } from "../config/db.js";

async function addSimpleTestData() {
  try {
    console.log("Adding simple test data...");

    // Add sample complaints with manual IDs
    const complaints = [
      {
        id: 1,
        description:
          "‡¶∞‡¶æ‡¶§‡ßá ‡¶ò‡¶∞‡ßá ‡¶ö‡ßã‡¶∞ ‡¶¢‡ßÅ‡¶ï‡ßá ‡¶ü‡¶æ‡¶ï‡¶æ-‡¶™‡¶Ø‡¶º‡¶∏‡¶æ ‡¶ì ‡¶ó‡¶π‡¶®‡¶æ ‡¶ö‡ßÅ‡¶∞‡¶ø ‡¶ï‡¶∞‡ßá‡¶õ‡ßá‡•§ ‡¶Ü‡¶®‡ßÅ‡¶Æ‡¶æ‡¶®‡¶ø‡¶ï ‡¶ï‡ßç‡¶∑‡¶§‡¶ø ‡ß´‡ß¶,‡ß¶‡ß¶‡ß¶ ‡¶ü‡¶æ‡¶ï‡¶æ‡•§",
        crime_type: "‡¶ö‡ßÅ‡¶∞‡¶ø",
        location: "‡¶Æ‡¶ø‡¶∞‡¶™‡ßÅ‡¶∞-‡ßß‡ß¶, ‡¶¢‡¶æ‡¶ï‡¶æ",
        status: "pending",
        user_id: 1,
      },
      {
        id: 2,
        description:
          "‡¶¶‡¶ø‡¶®‡ßá‡¶∞ ‡¶¨‡ßá‡¶≤‡¶æ ‡¶¶‡ßã‡¶ï‡¶æ‡¶®‡ßá ‡¶°‡¶æ‡¶ï‡¶æ‡¶§‡¶ø ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡•§ ‡¶°‡¶æ‡¶ï‡¶æ‡¶§‡¶∞‡¶æ ‡¶Ö‡¶∏‡ßç‡¶§‡ßç‡¶∞ ‡¶¶‡ßá‡¶ñ‡¶ø‡¶Ø‡¶º‡ßá ‡¶ü‡¶æ‡¶ï‡¶æ ‡¶®‡¶ø‡¶Ø‡¶º‡ßá ‡¶ó‡ßá‡¶õ‡ßá‡•§",
        crime_type: "‡¶°‡¶æ‡¶ï‡¶æ‡¶§‡¶ø",
        location: "‡¶ß‡¶æ‡¶®‡¶Æ‡¶®‡ßç‡¶°‡¶ø, ‡¶¢‡¶æ‡¶ï‡¶æ",
        status: "pending",
        user_id: 2,
      },
      {
        id: 3,
        description:
          "‡¶™‡¶æ‡¶°‡¶º‡¶æ‡¶Ø‡¶º ‡¶¶‡ßÅ‡¶á ‡¶™‡¶ï‡ßç‡¶∑‡ßá‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá ‡¶Æ‡¶æ‡¶∞‡¶æ‡¶Æ‡¶æ‡¶∞‡¶ø ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡•§ ‡¶è‡¶ï‡¶ú‡¶® ‡¶Ü‡¶π‡¶§ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡•§",
        crime_type: "‡¶Æ‡¶æ‡¶∞‡¶æ‡¶Æ‡¶æ‡¶∞‡¶ø",
        location: "‡¶â‡¶§‡ßç‡¶§‡¶∞‡¶æ, ‡¶¢‡¶æ‡¶ï‡¶æ",
        status: "resolved",
        user_id: 3,
      },
    ];

    for (const complaint of complaints) {
      try {
        await pool.query(
          `
          INSERT INTO Makes_complaint (complaint_id, description, crime_type, location, status, user_id, date, created_at) 
          VALUES (?, ?, ?, ?, ?, ?, CURDATE(), NOW())
          ON DUPLICATE KEY UPDATE 
          description = VALUES(description),
          crime_type = VALUES(crime_type),
          location = VALUES(location),
          status = VALUES(status)
        `,
          [
            complaint.id,
            complaint.description,
            complaint.crime_type,
            complaint.location,
            complaint.status,
            complaint.user_id,
          ]
        );

        console.log(`‚úÖ Complaint ${complaint.id} inserted`);
      } catch (error) {
        console.log(
          `Error inserting complaint ${complaint.id}:`,
          error.message
        );
      }
    }

    // Add sample cases
    const cases = [
      {
        id: 1,
        complaint_id: 1,
        status: "pending",
      },
      {
        id: 2,
        complaint_id: 2,
        status: "in_progress",
      },
    ];

    for (const case_ of cases) {
      try {
        await pool.query(
          `
          INSERT INTO Case_filing (case_id, complaint_id, status) 
          VALUES (?, ?, ?)
          ON DUPLICATE KEY UPDATE 
          status = VALUES(status)
        `,
          [case_.id, case_.complaint_id, case_.status]
        );

        console.log(`‚úÖ Case ${case_.id} inserted`);
      } catch (error) {
        console.log(`Error inserting case ${case_.id}:`, error.message);
      }
    }

    // Show summary
    console.log("\nüìä ‡¶°‡¶æ‡¶ü‡¶æ‡¶¨‡ßá‡¶∏ ‡¶∏‡¶æ‡¶∞‡¶æ‡¶Ç‡¶∂:");

    const [userCount] = await pool.query("SELECT COUNT(*) as count FROM users");
    console.log(`üë• ‡¶Æ‡ßã‡¶ü ‡¶á‡¶â‡¶ú‡¶æ‡¶∞: ${userCount[0].count}`);

    const [complaintCount] = await pool.query(
      "SELECT COUNT(*) as count FROM Makes_complaint"
    );
    console.log(`üìù ‡¶Æ‡ßã‡¶ü ‡¶Ö‡¶≠‡¶ø‡¶Ø‡ßã‡¶ó: ${complaintCount[0].count}`);

    const [caseCount] = await pool.query(
      "SELECT COUNT(*) as count FROM Case_filing"
    );
    console.log(`üìÅ ‡¶Æ‡ßã‡¶ü ‡¶Æ‡¶æ‡¶Æ‡¶≤‡¶æ: ${caseCount[0].count}`);

    // Show test users
    console.log("\nüîë ‡¶ü‡ßá‡¶∏‡ßç‡¶ü ‡¶è‡¶ï‡¶æ‡¶â‡¶®‡ßç‡¶ü:");
    const [testUsers] = await pool.query(
      "SELECT name, phone, user_type FROM users LIMIT 8"
    );
    console.table(testUsers);

    // Show sample complaints
    console.log("\nüìù ‡¶®‡¶Æ‡ßÅ‡¶®‡¶æ ‡¶Ö‡¶≠‡¶ø‡¶Ø‡ßã‡¶ó‡¶∏‡¶Æ‡ßÇ‡¶π:");
    const [sampleComplaints] = await pool.query(`
      SELECT c.complaint_id, c.crime_type, c.location, c.status, u.name as complainant 
      FROM Makes_complaint c 
      LEFT JOIN users u ON c.user_id = u.user_id 
      LIMIT 5
    `);
    console.table(sampleComplaints);

    console.log("\n‚úÖ ‡¶ü‡ßá‡¶∏‡ßç‡¶ü ‡¶°‡¶æ‡¶ü‡¶æ ‡¶∏‡¶´‡¶≤‡¶≠‡¶æ‡¶¨‡ßá ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá!");
    console.log("üåê ‡¶è‡¶ñ‡¶® http://localhost:3000 ‡¶è ‡¶ó‡¶ø‡¶Ø‡¶º‡ßá ‡¶ü‡ßá‡¶∏‡ßç‡¶ü ‡¶ï‡¶∞‡ßÅ‡¶®");
  } catch (error) {
    console.error("‚ùå ‡¶ü‡ßá‡¶∏‡ßç‡¶ü ‡¶°‡¶æ‡¶ü‡¶æ ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ:", error);
  } finally {
    process.exit(0);
  }
}

addSimpleTestData();
