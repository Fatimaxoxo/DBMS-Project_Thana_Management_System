"use client";
import React, { useState } from "react";
import axios from "axios";
import { toast } from "react-toastify";

export default function NewComplaintForm({ onSuccess }) {
  const [formData, setFormData] = useState({
    complaint_type: "",
    title: "",
    description: "",
    incident_date: "",
    location: "",
    suspect_info: "",
  });
  const [isSubmitting, setIsSubmitting] = useState(false);

  const complaintTypes = [
    { value: "theft", label: "‡¶ö‡ßÅ‡¶∞‡¶ø" },
    { value: "assault", label: "‡¶Æ‡¶æ‡¶∞‡¶æ‡¶Æ‡¶æ‡¶∞‡¶ø" },
    { value: "fraud", label: "‡¶ú‡¶æ‡¶≤‡¶ø‡¶Ø‡¶º‡¶æ‡¶§‡¶ø" },
    { value: "missing_person", label: "‡¶ó‡ßÅ‡¶Æ/‡¶Ö‡¶™‡¶π‡¶∞‡¶£" },
    { value: "property_damage", label: "‡¶∏‡¶Æ‡ßç‡¶™‡¶¶ ‡¶ï‡ßç‡¶∑‡¶§‡¶ø" },
    { value: "other", label: "‡¶Ö‡¶®‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶Ø" },
  ];

  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setFormData((prev) => ({
      ...prev,
      [name]: value,
    }));
  };

  const handleSubmit = async (e) => {
    e.preventDefault();

    if (
      !formData.complaint_type ||
      !formData.description ||
      !formData.incident_date ||
      !formData.location
    ) {
      toast.error("‡¶∏‡¶ï‡¶≤ ‡¶™‡ßç‡¶∞‡¶Ø‡¶º‡ßã‡¶ú‡¶®‡ßÄ‡¶Ø‡¶º ‡¶§‡¶•‡ßç‡¶Ø ‡¶™‡ßÇ‡¶∞‡¶£ ‡¶ï‡¶∞‡ßÅ‡¶®");
      return;
    }

    setIsSubmitting(true);

    try {
      const token = localStorage.getItem("token");
      const user = JSON.parse(localStorage.getItem("user"));

      const complaintData = {
        title:
          formData.title ||
          `${
            complaintTypes.find((t) => t.value === formData.complaint_type)
              ?.label
          } ‡¶Ö‡¶≠‡¶ø‡¶Ø‡ßã‡¶ó`,
        description: formData.description,
        complaint_type: formData.complaint_type,
        location: formData.location,
        incident_date: formData.incident_date + " 00:00:00",
        user_id: user.id,
      };

      const response = await axios.post(
        "http://localhost:4000/api/complaints",
        complaintData,
        {
          headers: {
            Authorization: `Bearer ${token}`,
            "Content-Type": "application/json",
          },
        }
      );

      toast.success("‡¶Ö‡¶≠‡¶ø‡¶Ø‡ßã‡¶ó ‡¶∏‡¶´‡¶≤‡¶≠‡¶æ‡¶¨‡ßá ‡¶¶‡¶æ‡¶ñ‡¶ø‡¶≤ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá");

      // Reset form
      setFormData({
        complaint_type: "",
        title: "",
        description: "",
        incident_date: "",
        location: "",
        suspect_info: "",
      });

      if (onSuccess) {
        onSuccess();
      }
    } catch (error) {
      console.error("Error submitting complaint:", error);
      toast.error(
        error.response?.data?.message || "‡¶Ö‡¶≠‡¶ø‡¶Ø‡ßã‡¶ó ‡¶¶‡¶æ‡¶ñ‡¶ø‡¶≤‡ßá ‡¶§‡ßç‡¶∞‡ßÅ‡¶ü‡¶ø ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá"
      );
    } finally {
      setIsSubmitting(false);
    }
  };

  return (
    <div className="bg-white rounded-xl shadow-lg p-8">
      <div className="flex items-center mb-6">
        <div className="p-3 rounded-full bg-blue-100 mr-4">
          <span className="text-2xl">üìù</span>
        </div>
        <h2 className="text-2xl font-bold text-gray-900">‡¶®‡¶§‡ßÅ‡¶® ‡¶Ö‡¶≠‡¶ø‡¶Ø‡ßã‡¶ó ‡¶¶‡¶æ‡¶ñ‡¶ø‡¶≤</h2>
      </div>

      <form onSubmit={handleSubmit} className="space-y-6">
        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              ‡¶Ö‡¶≠‡¶ø‡¶Ø‡ßã‡¶ó‡ßá‡¶∞ ‡¶ß‡¶∞‡¶£ *
            </label>
            <select
              name="complaint_type"
              value={formData.complaint_type}
              onChange={handleInputChange}
              className="w-full border border-gray-300 rounded-lg px-4 py-3 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              required
            >
              <option value="">‡¶Ö‡¶≠‡¶ø‡¶Ø‡ßã‡¶ó‡ßá‡¶∞ ‡¶ß‡¶∞‡¶£ ‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®</option>
              {complaintTypes.map((type, index) => (
                <option key={index} value={type.value}>
                  {type.label}
                </option>
              ))}
            </select>
          </div>

          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              ‡¶ò‡¶ü‡¶®‡¶æ‡¶∞ ‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ *
            </label>
            <input
              type="date"
              name="incident_date"
              value={formData.incident_date}
              onChange={handleInputChange}
              className="w-full border border-gray-300 rounded-lg px-4 py-3 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              required
            />
          </div>
        </div>

        <div>
          <label className="block text-sm font-medium text-gray-700 mb-2">
            ‡¶ò‡¶ü‡¶®‡¶æ‡¶∏‡ßç‡¶•‡¶≤ *
          </label>
          <input
            type="text"
            name="location"
            value={formData.location}
            onChange={handleInputChange}
            placeholder="‡¶ò‡¶ü‡¶®‡¶æ‡¶∏‡ßç‡¶•‡¶≤‡ßá‡¶∞ ‡¶∏‡¶Æ‡ßç‡¶™‡ßÇ‡¶∞‡ßç‡¶£ ‡¶†‡¶ø‡¶ï‡¶æ‡¶®‡¶æ ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®"
            className="w-full border border-gray-300 rounded-lg px-4 py-3 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
            required
          />
        </div>

        <div>
          <label className="block text-sm font-medium text-gray-700 mb-2">
            ‡¶ò‡¶ü‡¶®‡¶æ‡¶∞ ‡¶¨‡¶ø‡¶¨‡¶∞‡¶£ *
          </label>
          <textarea
            name="description"
            value={formData.description}
            onChange={handleInputChange}
            placeholder="‡¶ò‡¶ü‡¶®‡¶æ‡¶∞ ‡¶∏‡¶Æ‡ßç‡¶™‡ßÇ‡¶∞‡ßç‡¶£ ‡¶¨‡¶ø‡¶¨‡¶∞‡¶£ ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®..."
            className="w-full border border-gray-300 rounded-lg px-4 py-3 h-32 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 resize-none"
            required
          />
        </div>

        <div>
          <label className="block text-sm font-medium text-gray-700 mb-2">
            ‡¶∏‡¶®‡ßç‡¶¶‡ßá‡¶π‡¶≠‡¶æ‡¶ú‡¶® ‡¶¨‡ßç‡¶Ø‡¶ï‡ßç‡¶§‡¶ø‡¶∞ ‡¶§‡¶•‡ßç‡¶Ø (‡¶Ø‡¶¶‡¶ø ‡¶•‡¶æ‡¶ï‡ßá)
          </label>
          <textarea
            name="suspect_info"
            value={formData.suspect_info}
            onChange={handleInputChange}
            placeholder="‡¶∏‡¶®‡ßç‡¶¶‡ßá‡¶π‡¶≠‡¶æ‡¶ú‡¶® ‡¶¨‡ßç‡¶Ø‡¶ï‡ßç‡¶§‡¶ø‡¶∞ ‡¶®‡¶æ‡¶Æ, ‡¶†‡¶ø‡¶ï‡¶æ‡¶®‡¶æ ‡¶¨‡¶æ ‡¶Ö‡¶®‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶Ø ‡¶§‡¶•‡ßç‡¶Ø..."
            className="w-full border border-gray-300 rounded-lg px-4 py-3 h-20 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 resize-none"
          />
        </div>

        <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-4">
          <div className="flex items-start">
            <span className="text-yellow-500 text-xl mr-2">‚ö†Ô∏è</span>
            <div>
              <h4 className="text-sm font-medium text-yellow-800 mb-1">
                ‡¶ó‡ßÅ‡¶∞‡ßÅ‡¶§‡ßç‡¶¨‡¶™‡ßÇ‡¶∞‡ßç‡¶£ ‡¶§‡¶•‡ßç‡¶Ø
              </h4>
              <p className="text-sm text-yellow-700">
                ‚Ä¢ ‡¶∏‡¶ï‡¶≤ ‡¶§‡¶•‡ßç‡¶Ø ‡¶∏‡¶§‡ßç‡¶Ø ‡¶è‡¶¨‡¶Ç ‡¶∏‡¶†‡¶ø‡¶ï ‡¶§‡¶æ ‡¶®‡¶ø‡¶∂‡ßç‡¶ö‡¶ø‡¶§ ‡¶ï‡¶∞‡ßÅ‡¶®
                <br />‚Ä¢ ‡¶Æ‡¶ø‡¶•‡ßç‡¶Ø‡¶æ ‡¶§‡¶•‡ßç‡¶Ø ‡¶™‡ßç‡¶∞‡¶¶‡¶æ‡¶® ‡¶Ü‡¶á‡¶®‡¶§ ‡¶¶‡¶£‡ßç‡¶°‡¶®‡ßÄ‡¶Ø‡¶º ‡¶Ö‡¶™‡¶∞‡¶æ‡¶ß
                <br />‚Ä¢ ‡¶ú‡¶∞‡ßÅ‡¶∞‡¶ø ‡¶Ö‡¶¨‡¶∏‡ßç‡¶•‡¶æ‡¶Ø‡¶º ‡ßØ‡ßØ‡ßØ ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞‡ßá ‡¶ï‡¶≤ ‡¶ï‡¶∞‡ßÅ‡¶®
              </p>
            </div>
          </div>
        </div>

        <div className="flex justify-end space-x-4">
          <button
            type="button"
            onClick={() => {
              setFormData({
                complaint_type: "",
                title: "",
                description: "",
                incident_date: "",
                location: "",
                suspect_info: "",
              });
            }}
            className="px-6 py-3 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50 transition-colors"
            disabled={isSubmitting}
          >
            ‡¶∞‡¶ø‡¶∏‡ßá‡¶ü
          </button>
          <button
            type="submit"
            className="px-8 py-3 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition-colors flex items-center space-x-2 disabled:opacity-50 disabled:cursor-not-allowed"
            disabled={isSubmitting}
          >
            {isSubmitting ? (
              <>
                <div className="animate-spin rounded-full h-4 w-4 border-b-2 border-white"></div>
                <span>‡¶¶‡¶æ‡¶ñ‡¶ø‡¶≤ ‡¶π‡¶ö‡ßç‡¶õ‡ßá...</span>
              </>
            ) : (
              <>
                <span className="text-lg">üìã</span>
                <span>‡¶Ö‡¶≠‡¶ø‡¶Ø‡ßã‡¶ó ‡¶¶‡¶æ‡¶ñ‡¶ø‡¶≤ ‡¶ï‡¶∞‡ßÅ‡¶®</span>
              </>
            )}
          </button>
        </div>
      </form>
    </div>
  );
}
